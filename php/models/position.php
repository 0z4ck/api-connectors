<?php
/**
 *  Copyright 2011 Wordnik, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * $model.description$
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */
class Position {

  static $swaggerTypes = array(
      'account' => 'float',
      'symbol' => 'string',
      'currency' => 'string',
      'prevPnl' => 'float',
      'prevClosePrice' => 'float',
      'openingTimestamp' => 'DateTime',
      'openingBuyQty' => 'float',
      'openingBuyCost' => 'float',
      'openingSellQty' => 'float',
      'openingSellCost' => 'float',
      'openingQty' => 'float',
      'openingCost' => 'float',
      'openingComm' => 'float',
      'openOrderBuyQty' => 'float',
      'openOrderBuyCost' => 'float',
      'openOrderSellQty' => 'float',
      'openOrderSellCost' => 'float',
      'execBuyQty' => 'float',
      'execBuyCost' => 'float',
      'execSellQty' => 'float',
      'execSellCost' => 'float',
      'execQty' => 'float',
      'execCost' => 'float',
      'execComm' => 'float',
      'currentTimestamp' => 'DateTime',
      'currentBuyQty' => 'float',
      'currentBuyCost' => 'float',
      'currentSellQty' => 'float',
      'currentSellCost' => 'float',
      'currentQty' => 'float',
      'currentCost' => 'float',
      'currentComm' => 'float',
      'grossOpenCost' => 'float',
      'grossExecCost' => 'float',
      'lastPrice' => 'float',
      'lastValue' => 'float',
      'initMargin' => 'float',
      'maintMargin' => 'float',
      'sessionMargin' => 'float',
      'targetExcessMargin' => 'float',
      'varMargin' => 'float',
      'pnl' => 'float',
      'pnlPcnt' => 'float',
      'avgBuyPrice' => 'float',
      'avgSellPrice' => 'float',
      'avgEntryPrice' => 'float',
      'breakEvenPrice' => 'float',
      'marginCallPrice' => 'float',
      'liquidationPrice' => 'float',
      'bankruptPrice' => 'float',
      'timestamp' => 'DateTime'

    );

  public $account; // float
  public $symbol; // string
  public $currency; // string
  public $prevPnl; // float
  public $prevClosePrice; // float
  public $openingTimestamp; // DateTime
  public $openingBuyQty; // float
  public $openingBuyCost; // float
  public $openingSellQty; // float
  public $openingSellCost; // float
  public $openingQty; // float
  public $openingCost; // float
  public $openingComm; // float
  public $openOrderBuyQty; // float
  public $openOrderBuyCost; // float
  public $openOrderSellQty; // float
  public $openOrderSellCost; // float
  public $execBuyQty; // float
  public $execBuyCost; // float
  public $execSellQty; // float
  public $execSellCost; // float
  public $execQty; // float
  public $execCost; // float
  public $execComm; // float
  public $currentTimestamp; // DateTime
  public $currentBuyQty; // float
  public $currentBuyCost; // float
  public $currentSellQty; // float
  public $currentSellCost; // float
  public $currentQty; // float
  public $currentCost; // float
  public $currentComm; // float
  public $grossOpenCost; // float
  public $grossExecCost; // float
  public $lastPrice; // float
  public $lastValue; // float
  public $initMargin; // float
  public $maintMargin; // float
  public $sessionMargin; // float
  public $targetExcessMargin; // float
  public $varMargin; // float
  public $pnl; // float
  public $pnlPcnt; // float
  public $avgBuyPrice; // float
  public $avgSellPrice; // float
  public $avgEntryPrice; // float
  public $breakEvenPrice; // float
  public $marginCallPrice; // float
  public $liquidationPrice; // float
  public $bankruptPrice; // float
  public $timestamp; // DateTime
  }

